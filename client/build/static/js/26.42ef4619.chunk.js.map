{"version":3,"sources":["api.js","components/appeals-list/AppealsList.js","components/appeals-list/index.js"],"names":["api","axios","create","baseURL","responseType","ReqStatus","props","status","className","console","log","AppealList","appeals","scope","length","orderId","map","e","reqidenty","from","name","date","split","to","_id","Dashboard","location","useLocation","useState","setAppeals","category","pathname","lastItem","useEffect","fetchData","a","path","API","get","res","data","AppealsList"],"mappings":"6KAAA,aAEMA,EAFN,OAEYC,EAAMC,OAAO,CACvBC,QAAS,8BACTC,aAAc,SASDJ,O,iHCgDTK,EAAY,SAACC,GACjB,OAAQA,EAAMC,QACZ,IAAK,OACH,OAAO,wBAAQC,UAAU,iBAAlB,wDACT,IAAK,UACH,OAAO,wBAAQA,UAAU,kBAAlB,yDACT,IAAK,SACH,OAAO,wBAAQA,UAAU,kBAAlB,wDACT,QACEC,QAAQC,IAAR,OAISC,EAtEI,SAACL,GAClB,IAAQM,EAAYN,EAAZM,QAIR,OACE,cAAC,KAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,4HACA,cAAC,IAAD,UACE,wBAAOJ,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIK,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,2EACCD,EAAQE,QACPF,EAAQ,GAAGG,QACT,oBAAIF,MAAM,MAAV,iFAEA,KACJ,oBAAIA,MAAM,MAAV,6FACA,oBAAIA,MAAM,MAAV,kDACA,oBAAIA,MAAM,aAGd,gCACGD,EAAQE,OACLF,EAAQI,KAAI,SAACC,GAAD,OACV,+BACE,oBAAIJ,MAAM,MAAV,SAAiBI,EAAEC,YACnB,6BAAKD,EAAEE,KAAKC,OACXH,EAAEF,QAAU,oBAAIF,MAAM,MAAV,SAAiBI,EAAEF,UAAgB,KAChD,6BAAKE,EAAEI,KAAKC,MAAM,KAAK,KAEvB,6BACE,cAAC,EAAD,CAAWf,OAAQU,EAAEV,WAEvB,6BACE,cAAC,IAAD,CAAMgB,GAAE,kBAAaN,EAAEO,KAAvB,SACE,wBAAQhB,UAAU,kBAAlB,gHAXGS,EAAEO,QAkBb,oB,iBCtBLC,UAxBG,WAChB,IAAMC,EAAWC,cACjB,EAA8BC,mBAAS,IAAvC,mBAAOhB,EAAP,KAAgBiB,EAAhB,KAEMC,EAAWJ,EAASK,SAAST,MAAM,KAAKU,SAiB9C,OAfAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEAERC,EAAmB,UAAZN,EAAuB,GAAKA,EAF3B,SAIIO,IAAIC,IAAJ,iBAAkBF,IAJtB,OAIRG,EAJQ,OAKdV,EAAWU,EAAIC,MALD,gDAOd/B,QAAQC,IAAR,MAPc,yDAAH,qDAWfwB,MACC,IAEI,cAACO,EAAD,CAAa7B,QAASA","file":"static/js/26.42ef4619.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://5.63.159.40:3001/api\",\r\n  responseType: \"json\",\r\n});\r\n\r\n// api.interceptors.request.use((config) => {\r\n//   config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from \"@coreui/react\";\r\n\r\nconst AppealList = (props) => {\r\n  const { appeals } = props;\r\n\r\n  //   appeals.sort((a, b) => (a.status === \"open\" ? -1 : 1));\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol>\r\n        <CCard>\r\n          <CCardHeader>Последние обращения</CCardHeader>\r\n          <CCardBody>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">ID</th>\r\n                  <th scope=\"col\">Имя клиента</th>\r\n                  {appeals.length ? (\r\n                    appeals[0].orderId ? (\r\n                      <th scope=\"col\">Номер заказа</th>\r\n                    ) : null\r\n                  ) : null}\r\n                  <th scope=\"col\">Дата обращения</th>\r\n                  <th scope=\"col\">Статус</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {appeals.length\r\n                  ? appeals.map((e) => (\r\n                      <tr key={e._id}>\r\n                        <th scope=\"row\">{e.reqidenty}</th>\r\n                        <td>{e.from.name}</td>\r\n                        {e.orderId ? <th scope=\"row\">{e.orderId}</th> : null}\r\n                        <td>{e.date.split(\"T\")[0]}</td>\r\n\r\n                        <td>\r\n                          <ReqStatus status={e.status} />\r\n                        </td>\r\n                        <td>\r\n                          <Link to={`/appeal/${e._id}`}>\r\n                            <button className=\"btn btn-primary\">\r\n                              Перейти к запросу\r\n                            </button>\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    ))\r\n                  : null}\r\n              </tbody>\r\n            </table>\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nconst ReqStatus = (props) => {\r\n  switch (props.status) {\r\n    case \"open\":\r\n      return <button className=\"btn btn-danger\">Открыто</button>;\r\n    case \"process\":\r\n      return <button className=\"btn btn-warning\">В работе</button>;\r\n    case \"closed\":\r\n      return <button className=\"btn btn-success\">Закрыто</button>;\r\n    default:\r\n      console.log(`k`);\r\n  }\r\n};\r\n\r\nexport default AppealList;\r\n","import AppealsList from \"./AppealsList\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport API from \"../../api\";\r\n\r\nconst Dashboard = () => {\r\n  const location = useLocation();\r\n  const [appeals, setAppeals] = useState([]);\r\n\r\n  const category = location.pathname.split(\"/\").lastItem;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const path = category == \"appeal\" ? \"\" : category;\r\n\r\n        const res = await API.get(`appeal/${path}`);\r\n        setAppeals(res.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return <AppealsList appeals={appeals} />;\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}