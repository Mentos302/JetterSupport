{"version":3,"sources":["api.js","components/apppeal/Cards.js","components/apppeal/Modal.js","components/apppeal/Body.js","components/apppeal/index.js"],"names":["api","axios","create","baseURL","responseType","Cards","props","appeal","status","from","orderId","text","reqidenty","date","photos","accentColor","className","id","name","map","e","src","alt","Modal","useState","tgMessage","setTgMessage","info","setInfo","msgSubmitHandler","a","API","post","msg","console","log","show","onClose","color","closeButton","row","md","htmlFor","xs","rows","placeholder","onChange","target","value","onClick","AppealBody","history","useHistory","pdfMessage","setPdfMessage","videos","documents","_id","changeStatus","put","setAppeal","deleteHandler","delete","push","getPDF","get","data","window","open","split","size","disabled","length","i","rel","href","Appeal","location","useLocation","useEffect","appealID","pathname","lastItem","fetchData","res"],"mappings":"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","file":"static/js/27.7ad812e1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://support.jetterhover.com/api\",\r\n  responseType: \"json\",\r\n});\r\n\r\n// api.interceptors.request.use((config) => {\r\n//   config.headers.Authorization = `Bearer ${localStorage.getItem(\"token\")}`;\r\n\r\n//   return config;\r\n// });\r\n\r\nexport default api;\r\n","import React from \"react\";\r\nimport { CCard, CCardBody, CCardHeader, CCol } from \"@coreui/react\";\r\n\r\nconst Cards = (props) => {\r\n  const { status, from, orderId, text, reqidenty, date, photos } = props.appeal;\r\n\r\n  return (\r\n    <div>\r\n      <CCol>\r\n        <CCard\r\n          accentColor={(() => {\r\n            if (status === \"open\") {\r\n              return \"danger\";\r\n            } else if (status === \"process\") {\r\n              return \"warning\";\r\n            } else if (status === \"closed\") {\r\n              return \"success\";\r\n            }\r\n          })()}\r\n        >\r\n          <CCardHeader className=\"reqCardHeader\">\r\n            <div id=\"title\">\r\n              Обращение пользователя <b>{from.name}</b>\r\n            </div>\r\n            {orderId ? <div id=\"subtitle\">к заказу № {orderId}</div> : null}\r\n          </CCardHeader>\r\n          <CCardBody>\r\n            {text}\r\n\r\n            <div className=\"mt-2 cardFooter\">\r\n              #{reqidenty} от {date}\r\n            </div>\r\n          </CCardBody>\r\n        </CCard>\r\n        {photos\r\n          ? photos.map((e) => (\r\n              <img className=\"reclamPhoto\" src={e} alt=\"Изображение\" />\r\n            ))\r\n          : null}\r\n      </CCol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  CAlert,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CButton,\r\n  CCol,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CFormGroup,\r\n  CTextarea,\r\n  CLabel,\r\n} from \"@coreui/react\";\r\nimport API from \"../../api\";\r\n\r\nconst Modal = (props) => {\r\n  const [tgMessage, setTgMessage] = useState(\"\");\r\n\r\n  const { info, setInfo, appeal } = props;\r\n  const { id, name } = appeal.from;\r\n\r\n  const msgChangeHandler = (e) => {\r\n    setTgMessage(e.target.value);\r\n  };\r\n\r\n  const msgSubmitHandler = async () => {\r\n    try {\r\n      await API.post(`/appeal/sendMessage`, {\r\n        id,\r\n        msg: tgMessage,\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CModal show={info} onClose={() => setInfo(!info)} color=\"info\">\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Отправка сообщения пользователю {name}</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CFormGroup row>\r\n          <CCol md=\"3\">\r\n            <CLabel htmlFor=\"textarea-input\">Сообщение</CLabel>\r\n          </CCol>\r\n          <CCol xs=\"12\" md=\"9\">\r\n            <CTextarea\r\n              name=\"textarea-input\"\r\n              id=\"textarea-input\"\r\n              rows=\"9\"\r\n              placeholder=\"Введите ваше сообщение ...\"\r\n              onChange={msgChangeHandler}\r\n            />\r\n          </CCol>\r\n        </CFormGroup>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" onClick={() => setInfo(!info)}>\r\n          Отмена\r\n        </CButton>\r\n        <CButton\r\n          color=\"info\"\r\n          onClick={() => {\r\n            msgSubmitHandler();\r\n            setInfo(!info);\r\n          }}\r\n        >\r\n          Отправить\r\n        </CButton>{\" \"}\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  CAlert,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport Modal from \"./Modal\";\r\nimport API from \"../../api\";\r\n\r\nconst AppealBody = (props) => {\r\n  let history = useHistory();\r\n  const [info, setInfo] = useState(false);\r\n  const [pdfMessage, setPdfMessage] = useState(false);\r\n\r\n  const { status, photos, videos, documents, _id } = props.appeal;\r\n\r\n  const changeStatus = async (status) => {\r\n    try {\r\n      await API.put(`appeal/status`, {\r\n        id: _id,\r\n        status,\r\n      });\r\n\r\n      props.setAppeal({ ...props.appeal, status });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteHandler = async (id) => {\r\n    try {\r\n      await API.delete(`/appeal/${id}`);\r\n\r\n      history.push(\"/home\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getPDF = async (id) => {\r\n    try {\r\n      setPdfMessage(true);\r\n      const { data } = await API.get(`/appeal/pdf/${id}`);\r\n      window.open(`${data}`);\r\n      setPdfMessage(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"reqBtns\">\r\n        <CDropdown className=\"m-1\">\r\n          <CDropdownToggle\r\n            split\r\n            color={(() => {\r\n              switch (status) {\r\n                case \"open\":\r\n                  return \"danger\";\r\n                case \"process\":\r\n                  return \"warning\";\r\n                case \"closed\":\r\n                  return \"success\";\r\n              }\r\n            })()}\r\n            size=\"lg\"\r\n          >\r\n            {(() => {\r\n              switch (status) {\r\n                case \"open\":\r\n                  return \"Открыто\";\r\n                case \"process\":\r\n                  return \"В работе\";\r\n                case \"closed\":\r\n                  return \"Закрыто\";\r\n              }\r\n            })()}\r\n          </CDropdownToggle>\r\n          <CDropdownMenu>\r\n            {status === \"closed\" ? (\r\n              <CDropdownItem disabled>Закрыто</CDropdownItem>\r\n            ) : (\r\n              <CDropdownItem onClick={() => changeStatus(`closed`)}>\r\n                Закрыто\r\n              </CDropdownItem>\r\n            )}\r\n            {status === \"process\" ? (\r\n              <CDropdownItem disabled>В работе</CDropdownItem>\r\n            ) : (\r\n              <CDropdownItem onClick={() => changeStatus(`process`)}>\r\n                В работе\r\n              </CDropdownItem>\r\n            )}\r\n            {status === \"open\" ? (\r\n              <CDropdownItem disabled>Открыто</CDropdownItem>\r\n            ) : (\r\n              <CDropdownItem onClick={() => changeStatus(`open`)}>\r\n                Открыто\r\n              </CDropdownItem>\r\n            )}\r\n          </CDropdownMenu>\r\n        </CDropdown>\r\n        <CButton\r\n          color=\"info\"\r\n          onClick={() => setInfo(!info)}\r\n          className=\"tgResponseBtn mr-1\"\r\n        >\r\n          Ответить\r\n        </CButton>\r\n      </div>\r\n      <div className=\"card\">\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <b>Прикрепленные материалы</b>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Фотографии\r\n            <span className=\"badge badge-primary ml-1\">{photos.length}</span>\r\n            <div className=\"filesList mt-2\">\r\n              {photos.length\r\n                ? photos.map((e, i) => (\r\n                    <a rel=\"noreferrer\" target=\"_blank\" href={e}>\r\n                      Файл #{i + 1}\r\n                    </a>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Видео\r\n            <span className=\"badge badge-primary ml-1\">{videos.length}</span>\r\n            <div className=\"filesList mt-2\">\r\n              {videos.length\r\n                ? videos.map((e, i) => (\r\n                    <a rel=\"noreferrer\" target=\"_blank\" href={e}>\r\n                      Файл #{i + 1}\r\n                    </a>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Документы\r\n            <span className=\"badge badge-primary ml-1\">{documents.length}</span>\r\n            <div className=\"filesList mt-2\">\r\n              {documents.length\r\n                ? documents.map((e, i) => (\r\n                    <a rel=\"noreferrer\" target=\"_blank\" href={e}>\r\n                      Файл #{i + 1}\r\n                    </a>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </li>\r\n          <li className=\"pdfButton\">\r\n            {pdfMessage ? (\r\n              <div className=\"p-3\">\r\n                <CAlert color=\"danger\">\r\n                  Ожидайте, готовлю для вас отчёт...\r\n                </CAlert>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  onClick={() => getPDF(_id)}\r\n                  className=\"btn btn-danger m-3\"\r\n                >\r\n                  Скачать отчёт в PDF\r\n                </button>\r\n                <button\r\n                  onClick={() => deleteHandler(_id)}\r\n                  className=\"btn btn-secondary mt-3\"\r\n                >\r\n                  Удалить рекламацию\r\n                </button>\r\n              </>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Modal info={info} setInfo={setInfo} appeal={props.appeal} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppealBody;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Cards from \"./Cards\";\r\nimport AppealBody from \"./Body\";\r\nimport API from \"../../api\";\r\n\r\nconst Appeal = () => {\r\n  let location = useLocation();\r\n  const [appeal, setAppeal] = useState({});\r\n\r\n  useEffect(() => {\r\n    const appealID = location.pathname.split(\"/\").lastItem;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await API.get(`appeal/single/${appealID}`);\r\n        setAppeal(res.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [location.pathname]);\r\n\r\n  return appeal._id ? (\r\n    <div className=\"requestContainer\">\r\n      <Cards appeal={appeal} />\r\n      <AppealBody appeal={appeal} setAppeal={setAppeal} />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Appeal;\r\n"],"sourceRoot":""}